---
version: 2.1

executors:
  # Whenever the Go version is updated here and .promu.yml
  # should also be updated.
  golang:
    docker:
    - image: circleci/golang:1.13

jobs:
  test:
    executor: golang

    steps:
    - checkout
    - run: go mod download
    - run: make promu
    - run: make style unused test build
    - run: rm -v smokeping_prober

  build:
    machine: true

    steps:
    - checkout
    - run: make promu
    - run: promu crossbuild -v
    - persist_to_workspace:
        root: .
        paths:
        - .build
    - store_artifacts:
        path: .build
        destination: /build

  release:
    executor: golang

    steps:
    - checkout
    - setup_remote_docker
    - attach_workspace:
        at: .
    - run: make promu
    - run: promu crossbuild tarballs
    - run: promu checksum .tarballs
    - run: promu release .tarballs
    - store_artifacts:
        path: .tarballs
        destination: releases
    - run: make docker DOCKER_IMAGE_TAG="$CIRCLE_TAG"
    - run: docker images
    - run: docker login -u $QUAY_LOGIN -p $QUAY_PASSWORD quay.io
    - run: make docker-publish DOCKER_IMAGE_TAG="$CIRCLE_TAG"
    - run: make docker-manifest DOCKER_IMAGE_TAG="$CIRCLE_TAG"
    - run: |
        if [[ "$CIRCLE_TAG" =~ ^v[0-9]+(\.[0-9]+){2}$ ]]; then
          make docker-tag-latest DOCKER_IMAGE_TAG="$CIRCLE_TAG"
          make docker-publish DOCKER_IMAGE_TAG="latest"
          make docker-manifest DOCKER_IMAGE_TAG="latest"
        fi

  release_master:
    executor: golang

    steps:
    - checkout
    - setup_remote_docker
    - attach_workspace:
        at: .
    - run: make docker DOCKER_REPO=quay.io/superq
    - run: docker images
    - run: docker login -u $QUAY_LOGIN -p $QUAY_PASSWORD quay.io
    - run: make docker-publish DOCKER_REPO=quay.io/superq
    - run: make docker-manifest DOCKER_REPO=quay.io/superq

workflows:
  version: 2
  smokeping_prober:
    jobs:
    - test:
        filters:
          tags:
            only: /.*/
    - build:
        filters:
          tags:
            only: /.*/
    - release_master:
        requires:
        - test
        - build
        filters:
          branches:
            only: master
    - release:
        requires:
        - test
        - build
        filters:
          tags:
            only: /^v[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/
          branches:
            ignore: /.*/
